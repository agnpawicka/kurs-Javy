#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007ff49137a015, pid=13515, tid=13521
#
# JRE version: OpenJDK Runtime Environment (10.0.2+13) (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.3)
# Java VM: OpenJDK 64-Bit Server VM (10.0.2+13-Ubuntu-1ubuntu0.18.04.3, mixed mode, tiered, compressed oops, g1 gc, linux-amd64)
# Problematic frame:
# V  [libjvm.so+0xbed015]
#
# Core dump will be written. Default location: Core dumps may be processed with "/usr/share/apport/apport %p %s %c %d %P" (or dumping to /home/aga/IdeaProjects/KursJavy/L5/core.13515)
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#

---------------  S U M M A R Y ------------

Command Line: -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:35841,suspend=y,server=n -javaagent:/home/aga/ideaIU-2018.2.4/idea-IU-182.4505.22/lib/rt/debugger-agent.jar=file:/tmp/capture.props -Dfile.encoding=UTF-8 main.Main

Host: Intel(R) Core(TM) i3 CPU       M 380  @ 2.53GHz, 4 cores, 3G, Ubuntu 18.04.1 LTS
Time: Wed Nov 14 17:04:43 2018 CET elapsed time: 4648 seconds (0d 1h 17m 28s)

---------------  T H R E A D  ---------------

Current thread (0x00007ff488016000):  JavaThread "main" [_thread_in_vm, id=13521, stack(0x00007ff4927ac000,0x00007ff4928ad000)]

Stack: [0x00007ff4927ac000,0x00007ff4928ad000],  sp=0x00007ff4928a8eb0,  free space=1011k
Native frames: (J=compiled Java code, A=aot compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [libjvm.so+0xbed015]
V  [libjvm.so+0x844fad]
V  [libjvm.so+0x9a0f6b]
V  [libjvm.so+0x842981]
V  [libjvm.so+0xc357bf]
V  [libjvm.so+0xc36c84]
V  [libjvm.so+0xc3731d]
V  [libjvm.so+0x87ea9c]  JVM_MoreStackWalk+0xcc
j  java.lang.StackStreamFactory$AbstractStackWalker.fetchStackFrames(JJII[Ljava/lang/Object;)I+0 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.fetchStackFrames(I)I+35 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.getNextBatch()I+61 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.peekFrame()Ljava/lang/Class;+32 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.hasNext()Z+1 java.base@10.0.2
j  java.lang.StackStreamFactory$StackFrameTraverser.tryAdvance(Ljava/util/function/Consumer;)Z+16 java.base@10.0.2
j  java.util.stream.ReferencePipeline.forEachWithCancel(Ljava/util/Spliterator;Ljava/util/stream/Sink;)Z+13 java.base@10.0.2
j  java.util.stream.AbstractPipeline.copyIntoWithCancel(Ljava/util/stream/Sink;Ljava/util/Spliterator;)Z+32 java.base@10.0.2
j  java.util.stream.AbstractPipeline.copyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)V+49 java.base@10.0.2
j  java.util.stream.AbstractPipeline.wrapAndCopyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)Ljava/util/stream/Sink;+13 java.base@10.0.2
j  java.util.stream.FindOps$FindOp.evaluateSequential(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;+14 java.base@10.0.2
j  java.util.stream.AbstractPipeline.evaluate(Ljava/util/stream/TerminalOp;)Ljava/lang/Object;+88 java.base@10.0.2
j  java.util.stream.ReferencePipeline.findFirst()Ljava/util/Optional;+5 java.base@10.0.2
j  java.util.logging.LogRecord$CallerFinder.lambda$get$1(Ljava/util/stream/Stream;)Ljava/util/Optional;+7 java.logging@10.0.2
j  java.util.logging.LogRecord$CallerFinder$$Lambda$25.apply(Ljava/lang/Object;)Ljava/lang/Object;+8 java.logging@10.0.2
j  java.lang.StackStreamFactory$StackFrameTraverser.consumeFrames()Ljava/lang/Object;+25 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.doStackWalk(JIIII)Ljava/lang/Object;+78 java.base@10.0.2
v  ~StubRoutines::call_stub
V  [libjvm.so+0x83d38f]
V  [libjvm.so+0xc3832b]
V  [libjvm.so+0x87e8ea]  JVM_CallStackWalk+0xfa
j  java.lang.StackStreamFactory$AbstractStackWalker.callStackWalk(JIII[Ljava/lang/Object;)Ljava/lang/Object;+0 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.beginStackWalk()Ljava/lang/Object;+31 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.walk()Ljava/lang/Object;+8 java.base@10.0.2
j  java.lang.StackWalker.walk(Ljava/util/function/Function;)Ljava/lang/Object;+10 java.base@10.0.2
j  java.util.logging.LogRecord$CallerFinder.get()Ljava/util/Optional;+9 java.logging@10.0.2
j  java.util.logging.LogRecord.inferCaller()V+12 java.logging@10.0.2
j  java.util.logging.LogRecord.getSourceClassName()Ljava/lang/String;+8 java.logging@10.0.2
j  java.util.logging.SimpleFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;+12 java.logging@10.0.2
j  java.util.logging.StreamHandler.publish(Ljava/util/logging/LogRecord;)V+14 java.logging@10.0.2
j  java.util.logging.FileHandler.publish(Ljava/util/logging/LogRecord;)V+11 java.logging@10.0.2
j  java.util.logging.Logger.log(Ljava/util/logging/LogRecord;)V+90 java.logging@10.0.2
j  java.util.logging.Logger.doLog(Ljava/util/logging/LogRecord;)V+46 java.logging@10.0.2
j  java.util.logging.Logger.log(Ljava/util/logging/Level;Ljava/lang/String;)V+21 java.logging@10.0.2
j  main.Wyra≈ºenie.oblicz()Ljava/lang/Double;+343
j  main.Main.main([Ljava/lang/String;)V+130
v  ~StubRoutines::call_stub
V  [libjvm.so+0x83d38f]
V  [libjvm.so+0x85c3cd]
V  [libjvm.so+0x85e60e]
C  [libjli.so+0x4aa0]
C  [libjli.so+0x89dd]
C  [libpthread.so.0+0x76db]  start_thread+0xdb

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  java.lang.StackStreamFactory$AbstractStackWalker.fetchStackFrames(JJII[Ljava/lang/Object;)I+0 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.fetchStackFrames(I)I+35 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.getNextBatch()I+61 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.peekFrame()Ljava/lang/Class;+32 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.hasNext()Z+1 java.base@10.0.2
j  java.lang.StackStreamFactory$StackFrameTraverser.tryAdvance(Ljava/util/function/Consumer;)Z+16 java.base@10.0.2
j  java.util.stream.ReferencePipeline.forEachWithCancel(Ljava/util/Spliterator;Ljava/util/stream/Sink;)Z+13 java.base@10.0.2
j  java.util.stream.AbstractPipeline.copyIntoWithCancel(Ljava/util/stream/Sink;Ljava/util/Spliterator;)Z+32 java.base@10.0.2
j  java.util.stream.AbstractPipeline.copyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)V+49 java.base@10.0.2
j  java.util.stream.AbstractPipeline.wrapAndCopyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)Ljava/util/stream/Sink;+13 java.base@10.0.2
j  java.util.stream.FindOps$FindOp.evaluateSequential(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;+14 java.base@10.0.2
j  java.util.stream.AbstractPipeline.evaluate(Ljava/util/stream/TerminalOp;)Ljava/lang/Object;+88 java.base@10.0.2
j  java.util.stream.ReferencePipeline.findFirst()Ljava/util/Optional;+5 java.base@10.0.2
j  java.util.logging.LogRecord$CallerFinder.lambda$get$1(Ljava/util/stream/Stream;)Ljava/util/Optional;+7 java.logging@10.0.2
j  java.util.logging.LogRecord$CallerFinder$$Lambda$25.apply(Ljava/lang/Object;)Ljava/lang/Object;+8 java.logging@10.0.2
j  java.lang.StackStreamFactory$StackFrameTraverser.consumeFrames()Ljava/lang/Object;+25 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.doStackWalk(JIIII)Ljava/lang/Object;+78 java.base@10.0.2
v  ~StubRoutines::call_stub
j  java.lang.StackStreamFactory$AbstractStackWalker.callStackWalk(JIII[Ljava/lang/Object;)Ljava/lang/Object;+0 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.beginStackWalk()Ljava/lang/Object;+31 java.base@10.0.2
j  java.lang.StackStreamFactory$AbstractStackWalker.walk()Ljava/lang/Object;+8 java.base@10.0.2
j  java.lang.StackWalker.walk(Ljava/util/function/Function;)Ljava/lang/Object;+10 java.base@10.0.2
j  java.util.logging.LogRecord$CallerFinder.get()Ljava/util/Optional;+9 java.logging@10.0.2
j  java.util.logging.LogRecord.inferCaller()V+12 java.logging@10.0.2
j  java.util.logging.LogRecord.getSourceClassName()Ljava/lang/String;+8 java.logging@10.0.2
j  java.util.logging.SimpleFormatter.format(Ljava/util/logging/LogRecord;)Ljava/lang/String;+12 java.logging@10.0.2
j  java.util.logging.StreamHandler.publish(Ljava/util/logging/LogRecord;)V+14 java.logging@10.0.2
j  java.util.logging.FileHandler.publish(Ljava/util/logging/LogRecord;)V+11 java.logging@10.0.2